% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MasterIndex.R
\name{edgar_get_master_index}
\alias{edgar_get_master_index}
\title{Download SEC EDGAR Master Index Files}
\usage{
edgar_get_master_index(.dir, .user, .from = NULL, .to = NULL, .verbose = TRUE)
}
\arguments{
\item{.dir}{Character string specifying the directory where the downloaded data will be stored.
This directory will be created if it doesn't exist, along with the necessary subdir structure.}

\item{.user}{Character string specifying the user agent to be used in HTTP requests to the SEC EDGAR server.
This should typically be an email address to comply with SEC's fair access policy.}

\item{.from}{Numeric value specifying the start year and quarter in format YYYY.Q  (e.g., 2020.1 for Q1 2020).
If NULL, defaults to 1993.1 (the earliest available data).}

\item{.to}{Numeric value specifying the end year and quarter in format YYYY.Q.
If NULL, defaults to the current quarter.}

\item{.verbose}{Logical indicating whether to print progress messages to the console during processing.
Default is TRUE.}
}
\value{
No return value, called for side effects (downloading and saving data files).
}
\description{
Downloads and processes the SEC EDGAR master index files for specified time periods.
These files contain metadata about all SEC filings submitted to the EDGAR system,
providing a comprehensive index to locate specific documents.
}
\details{
The SEC EDGAR master index provides a comprehensive listing of all filings submitted
to the SEC. This function automates the process of downloading and standardizing
this data for further analysis.

The master index includes these key fields:
\itemize{
\item CIK (Central Index Key): Unique identifier for EDGAR filers
\item Company Name: Name of the filing entity
\item Form Type: SEC form type (e.g., 10-K, 10-Q, 8-K)
\item Date Filed: Submission date
\item URL: Link to the full text filing
\item Additional metadata fields added during processing
}

The function implements error handling and logging to gracefully handle network issues
or malformed data, ensuring robust operation even when processing large numbers of files.
}
